순열이란?

임의의 수열을 다른 순서로 섞는 연산
A = [1,5,6]인 경우 [1,5,6],[1,6,5],[5,1,6],[5,6,1],[6,1,5],[6,1,6]이 순열이다.

크기가 N인 수열의 서로 다른 순열은 총 N!개가 있다.
모든 순열을 사전순으로 나열했을 때
A = [1,2,3] 인 경우 사전순은 다음과 같다.
123 132 213 231 312 321

순열을 사용해야 하는 문제는 모든 순서를 다 사용해봐야한다.

사전순일 경우
첫 순열과 마지막 순열을 찾고 첫 순열에서 부터 마지막 순열이 나올 때 까지 다음 순열들을 호출해 모든 수열을 구할 수 있다.

첫 순열 : 오름차순, 마지막 순열 : 내림차순
어떤 순열이 앞에 어떠한 값으로 시작하는 마지막 순열인 것을 구했으면, 그 다음 순열은 앞에서 제일 마지막만 달라지는 첫 순열이 나와야한다.

예시)
A=[7,2,3,6,5,4,1] 
723으로 시작하는 마지막 순열
-> 어떻게 알 수 있냐면 마지막 순열이라는 것은 내림차순이니까
7 2 3 6 5 4 1 
    < | > > >

6이 i(기준)라고 할 수 있으며, A라는 순열은 i번째에서 부터 시작하는 내림차순이 있으니 i-1번째 까지로 시작하는 마지막 순열
-> 이것을 찾으려면 뒤에서 부터 수를 하나씩 비교해주면서 대소관계가 어긋난 순간 탐색을 종료
-> 최대 N개를 탐색 복잡도는 N

723으로 시작하는 마지막 순열이니까 이 다음은 72? 로 시작하는 순열이 되어야 한다.
3이 어떠한 수로 변경이 돼야 하는데 수는 커져야 한다. 그 이유는 다음 순열이니까

3이 무조건 4로 커져야하는 것은 아니다. 뒤에 있는 수 중 3보다 큰 수 중에 가장 작은 수를 찾아야한다.
-> 4가 그 다음 수가 된다.

7 2 3 6 5 4 1 -> 6은 i 3은 i-1, 4는 j 
A[i-1]과 A[j]를 swap 한다.
-> 7 2 4 6 5 3 1

723으로 시작하는 마지막 순열에서 724로 시작하는 첫 순열이 다음 순열이라는 것은 알았지만 뒷 부분이 첫 순열이 아니다.(6531)
-> 뒤집어 준다. 마지막 순열의 순서를 뒤집으면 첫순열이 된다. (내림차순 -> 오름차순)
-> 7 2 4 1 3 5 6


code
bool next_permutation(int[] a, int n) {
	int i = n - 1;
	// 1번 단계
	while (i > 0 && a[i-1] >= a[i]) i -= 1;		
	if (i <= 0) return false; // 마지막 순열
	// 2번 단계
	int j = n - 1;
	while (a[j] <= a[i-1]) j -= 1;
	// 3번 단계
	swap(a[i-1], a[j]);
	// 4번 단계
	j = n-1;
	while (i < j) {
		swap(a[i], a[j]);
		i += 1; j -= 1;
	}
	return false;
}

-> 다음 순열을 구하는 함수는 보통 boolean형으로 만들어 준다. 그 이유로는
 마지막 순열이라면 7654321 이면 > > > > > > > 계속 이 조건을 만족하니까 < 이걸 만족하는게 없다
 그럼 제일 끝까지 앞으로 가니까 마지막 순열이라는 것을 판단할 수 있다.
 
 그래서 다음 순열이 있으면 true 없으면 false